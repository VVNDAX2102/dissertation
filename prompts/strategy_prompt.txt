
I am writing a dissertation thesis on the topic of - how technical indicators
perform on Indian, UK, and US publically traded funds. The technical indicators 
that I am choosing right now are Bollinger bands, RSI, MACD, and Ichimoku Clouds. 
For each country I have taken one fund representing each sector: consumer goods,
energy, finance and banking, healthcare, and technology. The thing that I am 
interested to check is does one indicator performs better in predicting market 
movements than others in a different country across markets. 

I am inside notebooks folder. If I go one step out of this folder, I can see a data folder. Inside that folder there are 3 folders India, US, and UK. In each one of them, I have 5 CSV files which are OHLCV data of stocks and funds. The sample data looks like this: 
Date,Close,High,Low,Open,Volume
2020-08-17,18.861600875854492,18.861600875854492,18.861600875854492,18.861600875854492,0
2020-08-18,19.094900131225586,19.094900131225586,19.094900131225586,19.094900131225586,0
2020-08-19,19.15019989013672,19.15019989013672,19.15019989013672,19.15019989013672,0
2020-08-20,19.122800827026367,19.122800827026367,19.122800827026367,19.122800827026367,0
2020-08-21,19.24850082397461,19.24850082397461,19.24850082397461,19.24850082397461,0
2020-08-24,19.378999710083008,19.378999710083008,19.378999710083008,19.378999710083008,0

I want you to take some of the performance metrics from the ones mentioned below, whose plots I can show very neatly to make a sense of which of the 4 indicators are performing better than the others in 3 countries for 5 sectors.
I have put some methodology of what I have written in the report that I have followed. I want you to export all the important summaries that you feel are relevant. I 
just need neat presentable plots for the report. 

I am using python, I need python script. 

"""
\subsection{Performance Measurement}

Performance measurement in the context of trading strategies refers to the systematic evaluation of returns, risk, and risk-adjusted returns generated by a given set of trading rules over a specified time period. The objective is to determine not only whether a strategy is profitable, but also whether its returns are statistically significant, robust, and justified relative to the risk undertaken. For this dissertation, where Bollinger Bands, RSI, MACD, and Ichimoku Clouds are applied to Indian, UK, and US publicly traded funds, performance measurement provides the empirical foundation for comparing the relative effectiveness of each indicator in different markets and volatility regimes.

At the core of performance evaluation lies the return series $\{r_t\}_{t=1}^T$ generated by the trading strategy. For a discrete-time backtest, assuming positions are entered and exited at observable market prices without slippage, the single-period simple return at time $t$ is:
\[
r_t = \frac{P_t - P_{t-1}}{P_{t-1}}
\]
where $P_t$ denotes the asset price (or portfolio value) at time $t$. In a signal-based strategy, returns are conditioned on position direction:
\[
r_t^{(S)} = S_{t-1} \cdot \frac{P_t - P_{t-1}}{P_{t-1}}
\]
where $S_{t-1} \in \{-1, 0, 1\}$ is the trading signal from the previous period. Transaction costs $c$ per trade can be incorporated as:
\[
r_t^{(S,net)} = S_{t-1} \cdot \frac{P_t - P_{t-1}}{P_{t-1}} - c \cdot |S_t - S_{t-1}|
\]
where $|S_t - S_{t-1}|$ counts the number of position changes (0 for hold, 1 for entry/exit, 2 for reversal).

\subsubsection{Cumulative Return}  
The total growth of capital over $T$ periods is expressed as the cumulative return:
\[
CR_T = \prod_{t=1}^T (1 + r_t^{(S,net)}) - 1
\]
Cumulative returns provide a straightforward measure of profitability but do not adjust for volatility or time horizon.

\subsubsection{Annualized Return}  
To standardize performance across assets with different backtest lengths, annualized returns are computed. If $N$ is the number of trading periods in a year (e.g., $N=252$ for daily data):
\[
AR = \left( \prod_{t=1}^T (1 + r_t^{(S,net)}) \right)^{\frac{N}{T}} - 1
\]
This facilitates comparisons across markets and strategies.

\subsubsection{Volatility}  
Risk is often proxied by the standard deviation of returns:
\[
\sigma_r = \sqrt{\frac{1}{T-1} \sum_{t=1}^T \left(r_t^{(S,net)} - \overline{r^{(S,net)}}\right)^2}
\]
Annualized volatility is:
\[
\sigma_{ann} = \sigma_r \cdot \sqrt{N}
\]
Volatility captures the dispersion of returns and is central to risk-adjusted metrics.

\subsubsection{Sharpe Ratio}  
The Sharpe Ratio (Sharpe, 1966) measures excess return per unit of risk:
\[
\text{Sharpe} = \frac{\overline{r^{(S,net)}} - r_f}{\sigma_r}
\]
where $r_f$ is the risk-free rate (often set to 0 for short-term tests). The annualized Sharpe Ratio is:
\[
\text{Sharpe}_{ann} = \frac{AR - r_f}{\sigma_{ann}}
\]
A higher Sharpe Ratio indicates better risk-adjusted performance. In cross-market analysis, it provides a scale-independent measure of relative efficiency.

\subsubsection{Sortino Ratio}  
While the Sharpe Ratio penalizes upside and downside volatility equally, the Sortino Ratio considers only downside deviation:
\[
\sigma_d = \sqrt{\frac{1}{T_d} \sum_{t: r_t^{(S,net)} < MAR} (r_t^{(S,net)} - MAR)^2}
\]
where $MAR$ is the minimum acceptable return and $T_d$ is the number of downside periods. The Sortino Ratio is:
\[
\text{Sortino} = \frac{\overline{r^{(S,net)}} - MAR}{\sigma_d}
\]
This is useful for strategies with asymmetric return distributions.

\subsubsection{Maximum Drawdown (MDD)}  
Drawdown quantifies the largest peak-to-trough decline in cumulative returns:
\[
DD_t = \frac{V_{\text{peak}} - V_t}{V_{\text{peak}}}
\]
where $V_t$ is the portfolio value at $t$ and $V_{\text{peak}}$ is the maximum historical value before $t$. The maximum drawdown is:
\[
MDD = \max_{t} DD_t
\]
MDD captures tail risk and strategy resilience during market stress.

\subsubsection{Calmar Ratio}  
The Calmar Ratio measures return relative to maximum drawdown:
\[
\text{Calmar} = \frac{AR}{|MDD|}
\]
A higher Calmar Ratio indicates more favorable return-to-drawdown characteristics.

\subsubsection{Win Rate and Profit Factor}  
Win rate is the proportion of profitable trades:
\[
\text{Win Rate} = \frac{\text{\# profitable trades}}{\text{\# total trades}}
\]
Profit factor is the ratio of gross profits to gross losses:
\[
\text{PF} = \frac{\sum_{\text{winning trades}} R_i}{\left| \sum_{\text{losing trades}} R_i \right|}
\]
These are intuitive metrics for evaluating signal accuracy.

\subsubsection{Risk-Adjusted Return Over Maximum Drawdown (RoMaD)}  
An alternative to the Sharpe Ratio, RoMaD is:
\[
\text{RoMaD} = \frac{AR}{|MDD|}
\]
Unlike Sharpe, RoMaD uses drawdown instead of volatility as the risk denominator.

\subsubsection{Alpha and Beta}  
If $r_m$ denotes market returns, alpha ($\alpha$) and beta ($\beta$) from the CAPM regression:
\[
r_t^{(S)} - r_f = \alpha + \beta (r_{m,t} - r_f) + \epsilon_t
\]
quantify the strategy's market-independent performance ($\alpha$) and market exposure ($\beta$).

\subsection{Our Trading Strategy Algorithm}

The trading strategy implemented in this study employs a systematic approach to signal generation and portfolio management across four distinct technical indicators. The algorithm operates on daily OHLCV data spanning five years for each fund, generating standardized buy and sell signals that are then evaluated for performance across Indian, UK, and US markets. The strategy follows a long-only approach, consistent with the nature of mutual funds and ETFs under examination.

\subsubsection{Algorithm Overview}

The core algorithm is designed as a modular pipeline that takes raw financial time series data, applies chosen technical indicators with predefined parameters, generates corresponding trading signals, and subsequently evaluates these signals through performance metrics. It can be mathematically represented as a multi-stage mapping:
\[
\mathcal{A}: (\mathbf{P}, \mathbf{I}, \Theta) \rightarrow (\mathbf{S}, \mathbf{R}, \mathbf{M})
\]
where:
\begin{itemize}
    \item $\mathbf{P} = \{O_t, H_t, L_t, C_t, V_t\}_{t=1}^T$ represents the OHLCV price matrix.
    \item $\mathbf{I} = \{BB, RSI, MACD, ICH\}$ denotes the set of technical indicators.
    \item $\Theta$ is the parameter space for each indicator (look-back periods, thresholds, smoothing constants).
    \item $\mathbf{S}$ is the generated signal matrix, with entries corresponding to buy, sell, or hold decisions.
    \item $\mathbf{R}$ is the realized return series based on executed trades.
    \item $\mathbf{M}$ contains aggregated performance metrics such as total return, Sharpe ratio, and win rate.
\end{itemize}

\subsubsection{Data Preprocessing and Validation}

Before any signal generation can occur, the raw OHLCV data must be prepared to ensure integrity and consistency across markets. This preprocessing stage removes non-trading days, fills missing values to maintain continuous time series, and validates the logical relationships between open, high, low, and close prices. Outliers in daily returns are flagged using a $3\sigma$ rule, reducing the risk of abnormal price spikes distorting indicator values. The resulting dataset is clean, aligned across all instruments, and suitable for subsequent technical analysis.

\begin{breakablealgorithm}
\caption{Data Preprocessing Module}
\begin{algorithmic}[1]
\Require Raw OHLCV data for each fund
\Ensure Clean, validated price series
\State {Load OHLCV data from Yahoo Finance API \Comment{Retrieve historical daily data}}
\State {Remove non-trading days and align time series \Comment{Ensure time consistency across markets}}
\State {Handle missing values using forward-fill methodology \Comment{Fill gaps with last available value}}
\State {Validate data integrity: $H_t \geq \max(O_t, C_t)$, $L_t \leq \min(O_t, C_t)$ \Comment{Ensure OHLC values are logically consistent}}
\State {Calculate returns: $r_t = \frac{C_t - C_{t-1}}{C_{t-1}}$ \Comment{Compute daily percentage change}}
\State {Apply outlier detection using $3\sigma$ rule on returns \Comment{Identify and optionally cap extreme returns}}
\Return {Cleaned price matrix $\mathbf{P}$}
\end{algorithmic}
\end{breakablealgorithm}

\subsubsection{Individual Indicator Signal Generation}

The Bollinger Bands strategy uses a moving average (middle band) surrounded by an upper and lower band defined by a fixed number of standard deviations. Trading decisions are derived from price interactions with these bands: a price crossing above the middle band may signal bullish momentum, a drop below the lower band suggests oversold conditions, and a move above the upper band indicates potential overbought conditions. This algorithm captures both mean-reversion and trend-following opportunities depending on band breakouts.

\begin{breakablealgorithm}
\caption{Bollinger Bands Trading Signals}
\begin{algorithmic}[1]
\Require Closing prices $\{C_t\}$, parameters $(n=20, k=2)$
\Ensure Signal series $S^{BB}_t \in \{-1, 0, 1\}$
\For{$t = n$ to $T$}
    \State {$MB_t = \frac{1}{n} \sum_{i=0}^{n-1} C_{t-i}$ \Comment{Middle band as $n$-day SMA}}
    \State {$\sigma_t = \sqrt{\frac{\sum_{i=0}^{n-1} (C_{t-i} - MB_t)^2}{n}}$ \Comment{Rolling standard deviation}}
    \State {$UB_t = MB_t + k \cdot \sigma_t$, $LB_t = MB_t - k \cdot \sigma_t$ \Comment{Upper and lower bands}}
    \If{$C_t < LB_t$ and $C_{t-1} \geq LB_{t-1}$}
        \State {$S^{BB}_t = 1$ \Comment{Oversold bounce signal}}
    \ElsIf{$C_t > UB_t$ and $C_{t-1} \leq UB_{t-1}$}
        \State {$S^{BB}_t = -1$ \Comment{Overbought reversion signal}}
    \ElsIf{$C_t > MB_t$ and $C_{t-1} \leq MB_{t-1}$}
        \State {$S^{BB}_t = 1$ \Comment{Middle band breakout (bullish momentum)}}
    \Else
        \State {$S^{BB}_t = 0$ \Comment{No trade signal}}
    \EndIf
\EndFor
\Return {$\{S^{BB}_t\}$}
\end{algorithmic}
\end{breakablealgorithm}

The RSI-based strategy focuses on detecting momentum extremes. RSI values below a lower threshold (e.g., 30) indicate oversold conditions, prompting a buy signal, while values above an upper threshold (e.g., 70) indicate overbought conditions, triggering an exit or short. A crossover above the neutral midpoint (50) from below can also signal emerging bullish momentum. This approach blends mean-reversion logic with confirmation from momentum shifts.

\begin{breakablealgorithm}
\caption{RSI Trading Signals}
\begin{algorithmic}[1]
\Require Closing prices $\{C_t\}$, parameters $(n=14, \tau_{low}=30, \tau_{high}=70)$
\Ensure Signal series $S^{RSI}_t \in \{-1, 0, 1\}$
\State {Calculate initial $AG_n$ and $AL_n$ over first $n$ periods \Comment{Average gains and losses}}
\For{$t = n+1$ to $T$}
    \State {$\Delta_t = C_t - C_{t-1}$ \Comment{Daily change}}
    \State {$G_t = \max(\Delta_t, 0)$, $L_t = \max(-\Delta_t, 0)$ \Comment{Separate gains and losses}}
    \State {$AG_t = \frac{(AG_{t-1} \cdot (n-1)) + G_t}{n}$ \Comment{Update average gain}}
    \State {$AL_t = \frac{(AL_{t-1} \cdot (n-1)) + L_t}{n}$ \Comment{Update average loss}}
    \State {$RSI_t = 100 - \frac{100}{1 + \frac{AG_t}{AL_t}}$ \Comment{Relative Strength Index}}
    \If{$RSI_t < \tau_{low}$ and $RSI_{t-1} \geq \tau_{low}$}
        \State {$S^{RSI}_t = 1$ \Comment{Oversold entry}}
    \ElsIf{$RSI_t > \tau_{high}$ and $RSI_{t-1} \leq \tau_{high}$}
        \State {$S^{RSI}_t = -1$ \Comment{Overbought exit}}
    \ElsIf{$RSI_t > 50$ and $RSI_{t-1} \leq 50$}
        \State {$S^{RSI}_t = 1$ \Comment{Bullish momentum signal}}
    \Else
        \State {$S^{RSI}_t = 0$ \Comment{Hold position}}
    \EndIf
\EndFor
\Return {$\{S^{RSI}_t\}$}
\end{algorithmic}
\end{breakablealgorithm}

The MACD strategy captures trend changes by comparing two EMAs of different lengths. A bullish crossover occurs when the short-term EMA rises above the long-term EMA, while a bearish crossover occurs when it falls below. The signal line smooths the MACD line to reduce noise, and the histogram quantifies momentum strength. This method identifies both the direction and acceleration of price trends.

\begin{breakablealgorithm}
\caption{MACD Trading Signals}
\begin{algorithmic}[1]
\Require Closing prices $\{C_t\}$, parameters $(s=12, l=26, p=9)$
\Ensure Signal series $S^{MACD}_t \in \{-1, 0, 1\}$
\State {Initialize EMAs with SMA for first $l$ periods \Comment{Warm-up period}}
\For{$t = l+1$ to $T$}
    \State {$EMA^{(s)}_t = \frac{2}{s+1} C_t + \frac{s-1}{s+1} EMA^{(s)}_{t-1}$ \Comment{Short-term EMA}}
    \State {$EMA^{(l)}_t = \frac{2}{l+1} C_t + \frac{l-1}{l+1} EMA^{(l)}_{t-1}$ \Comment{Long-term EMA}}
    \State {$MACD_t = EMA^{(s)}_t - EMA^{(l)}_t$ \Comment{MACD line}}
    \If{$t \geq l + p$}
        \State {$Signal_t = \frac{2}{p+1} MACD_t + \frac{p-1}{p+1} Signal_{t-1}$ \Comment{Signal line}}
        \State {$Histogram_t = MACD_t - Signal_t$ \Comment{Histogram}}
        \If{$MACD_t > Signal_t$ and $MACD_{t-1} \leq Signal_{t-1}$}
            \State {$S^{MACD}_t = 1$ \Comment{Bullish crossover}}
        \ElsIf{$MACD_t < Signal_t$ and $MACD_{t-1} \geq Signal_{t-1}$}
            \State {$S^{MACD}_t = -1$ \Comment{Bearish crossover}}
        \ElsIf{$Histogram_t > 0$}
            \State {$S^{MACD}_t = 1$ \Comment{Momentum strengthening}}
        \Else
            \State {$S^{MACD}_t = 0$ \Comment{Hold}}
        \EndIf
    \EndIf
\EndFor
\Return {$\{S^{MACD}_t\}$}
\end{algorithmic}
\end{breakablealgorithm}

The Ichimoku strategy integrates multiple components to assess trend direction, momentum, and support/resistance levels. The Tenkan-sen and Kijun-sen act as short- and medium-term trend indicators, while Senkou Span A and B define the “cloud” that highlights future support and resistance. The Chikou Span adds confirmation from lagging prices. Bullish signals occur when price, lines, and cloud positioning all align positively; bearish signals occur under opposite conditions.

\begin{breakablealgorithm}
\caption{Ichimoku Trading Signals}
\begin{algorithmic}[1]
\Require OHLC prices, parameters $(p_1=9, p_2=26, p_3=52)$
\Ensure Signal series $S^{ICH}_t \in \{-1, 0, 1\}$
\For{$t = p_3$ to $T$}
    \State {$T_t = \frac{\max(H_{t-p_1+1:t}) + \min(L_{t-p_1+1:t})}{2}$ \Comment{Tenkan-sen (conversion line)}}
    \State {$K_t = \frac{\max(H_{t-p_2+1:t}) + \min(L_{t-p_2+1:t})}{2}$ \Comment{Kijun-sen (base line)}}
    \State {$SA_{t+p_2} = \frac{T_t + K_t}{2}$ \Comment{Senkou Span A (leading span 1)}}
    \State {$SB_{t+p_2} = \frac{\max(H_{t-p_3+1:t}) + \min(L_{t-p_3+1:t})}{2}$ \Comment{Senkou Span B (leading span 2)}}
    \State {$CS_t = C_{t-p_2}$ \Comment{Chikou span (lagging close)}}
    \If{$(T_t > K_t) \land (C_t > \max(SA_t, SB_t)) \land (CS_t > C_{t-p_2})$}
        \State {$S^{ICH}_t = 1$ \Comment{Strong bullish alignment}}
    \ElsIf{$(T_t < K_t) \land (C_t < \min(SA_t, SB_t)) \land (CS_t < C_{t-p_2})$}
        \State {$S^{ICH}_t = -1$ \Comment{Strong bearish alignment}}
    \ElsIf{$C_t > \max(SA_t, SB_t)$}
        \State {$S^{ICH}_t = 1$ \Comment{Above cloud continuation}}
    \Else
        \State {$S^{ICH}_t = 0$ \Comment{Neutral / hold}}
    \EndIf
\EndFor
\Return {$\{S^{ICH}_t\}$}
\end{algorithmic}
\end{breakablealgorithm}
"""